
1 rem = 16px;

rem is the root


Types of positioning:

1. static (Default): 
- The element is positioned according to the normal document flow (its natural position).
- It ignores top, right, bottom, and left properties.

2. relative:
- The element is positioned relative to its original position in the document flow.
- You can use top, right, bottom, and left to offset it from its original position.
- The space for the element in the document flow remains reserved.

3. absolute: 
- The element is positioned relative to the nearest positioned ancestor (an ancestor with position: relative, absolute, or fixed). If no ancestor is positioned, it will be relative to the <html> element.
- It is removed from the document flow, so it doesn't occupy space.

4. fixed:
- The element is positioned relative to the viewport, meaning it stays in the same place even when the page is scrolled.
- It is also removed from the document flow.

5. sticky: 
- The element toggles between relative and fixed, depending on the scroll position.
- It is positioned relative until it reaches a defined offset, after which it behaves like fixed.
- Requires top, left, right, or bottom to define the "stickiness."



/**************************FLEXBOX**************************/


using Flexbox;

// to make any container, flexbox - use: display: flex;

1. It is one dimensional layout method for arranging rows and columns

2. In Flexbox, the flex-direction property defines the direction in which the flex container places its flex items. There are four possible values for flex-direction:

    - row (default):
    Items are placed in a single row, left to right in the direction of the text.
    Main axis: horizontal.
    Cross axis: vertical.

    - row-reverse:
    Items are placed in a single row, but in reverse order (right to left).
    Main axis: horizontal (reversed).
    Cross axis: vertical.

    - Column:
    Items are placed in a single column, top to bottom.
    Main axis: vertical.
    Cross axis: horizontal

    - column-reverse:
    Items are placed in a single column, but in reverse order (bottom to top).
    Main axis: vertical (reversed).
    Cross axis: horizontal

    FLEX PROPERTIES:

    1. Justify-content
    2. flex-wrap
    3. align-items
    4. align-contents

//The main axis is the primary axis along which the flex items are arranged.
The main axis is the primary axis along which the flex items are arranged.
The direction of the main axis depends on the flex-direction property:
row (default): The main axis is horizontal (left to right).
row-reverse: The main axis is horizontal but reversed (right to left).
column: The main axis is vertical (top to bottom).
column-reverse: The main axis is vertical but reversed (bottom to top).

//cross axis: The cross axis is perpendicular to the main axis.
The direction of the cross axis depends on the flex-direction property:
If the flex-direction is row or row-reverse, the cross axis is vertical (top to bottom).
If the flex-direction is column or column-reverse, the cross axis is horizontal (left to right).


//justify content ---> main axis 
//align-item ---> cross axis